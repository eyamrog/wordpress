AWSTemplateFormatVersion: "2010-09-09"
Description: Creates Auto Scaling Groups for Web Servers
Parameters:
  VPCStackName:
    Description: Name of the stack that contains the VPC resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: WebVPC
  SGStackName:
    Description: Name of the stack that contains the Security Group resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: WebSG
  ALBStackName:
    Description: Name of the stack that contains the Application Load Balancing resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: WebALB
  WebServerKeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the Web Server instance
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: AWS20171012Coda
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
Resources:
  WebServerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: S3-Admin-Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: S3AdminAccess
                Effect: Allow
                Action: s3:*
                Resource: "*"
  WebServerInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles:
        - !Ref WebServerRole
  WebServerLC:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: ami-4fa0c235
      IamInstanceProfile: !Ref WebServerInstanceProfile
      KeyName: !Ref WebServerKeyName
      EbsOptimized: false
      UserData:
        Fn::Base64:
          !Join
            - ""
            - - "#!/bin/bash\n"
              - "aws s3 sync --delete s3://eyamrog-wordpressmedia/ /var/www/html/wp-content/uploads/\n"
              - "aws s3 sync --delete s3://eyamrog-wordpresscode/ /var/www/html/\n"
      InstanceType: t2.micro
      InstanceMonitoring: false
      SecurityGroups:
        - Fn::ImportValue:
            !Sub "${SGStackName}-WebSG"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
      AssociatePublicIpAddress: true
  WebServerASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      Tags:
        - Key: Name
          Value: WebServerASG
          PropagateAtLaunch: yes
      LaunchConfigurationName: !Ref WebServerLC
      TargetGroupARNs:
        - Fn::ImportValue:
            !Sub "${ALBStackName}-WebServerTG1"
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${VPCStackName}-PublicSubnetA"
        - Fn::ImportValue:
            !Sub "${VPCStackName}-PublicSubnetB"
        - Fn::ImportValue:
            !Sub "${VPCStackName}-PublicSubnetC"
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      DesiredCapacity: 0
      MinSize: 0
      MaxSize: 1
      Cooldown: 60
  WebServerReadLC:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: ami-5babc921
      IamInstanceProfile: !Ref WebServerInstanceProfile
      KeyName: !Ref WebServerKeyName
      EbsOptimized: false
      UserData:
        Fn::Base64:
          !Join
            - ""
            - - "#!/bin/bash\n"
              - "aws s3 sync --delete s3://eyamrog-wordpressmedia/ /var/www/html/wp-content/uploads/\n"
              - "aws s3 sync --delete s3://eyamrog-wordpresscode/ /var/www/html/\n"
      InstanceType: t2.micro
      InstanceMonitoring: false
      SecurityGroups:
        - Fn::ImportValue:
            !Sub "${SGStackName}-WebSG"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
      AssociatePublicIpAddress: true
  WebServerReadASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      Tags:
        - Key: Name
          Value: WebServerReadASG
          PropagateAtLaunch: yes
      LaunchConfigurationName: !Ref WebServerReadLC
      TargetGroupARNs:
        - Fn::ImportValue:
            !Sub "${ALBStackName}-WebServerReadTG1"
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${VPCStackName}-PublicSubnetA"
        - Fn::ImportValue:
            !Sub "${VPCStackName}-PublicSubnetB"
        - Fn::ImportValue:
            !Sub "${VPCStackName}-PublicSubnetC"
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      DesiredCapacity: 0
      MinSize: 0
      MaxSize: 8
      Cooldown: 60
Outputs:
  WebServerLC:
    Description: Web Server Launch Configuration
    Value: !Ref WebServerLC
    Export:
      Name: !Sub "${AWS::StackName}-WebServerLC"
  WebServerASG:
    Description: Web Server Auto Scaling Group
    Value: !Ref WebServerASG
    Export:
      Name: !Sub "${AWS::StackName}-WebServerASG"
  WebServerReadLC:
    Description: Web Server Launch Configuration
    Value: !Ref WebServerReadLC
    Export:
      Name: !Sub "${AWS::StackName}-WebServerReadLC"
  WebServerReadASG:
    Description: Web Server Auto Scaling Group for Read Users
    Value: !Ref WebServerReadASG
    Export:
      Name: !Sub "${AWS::StackName}-WebServerReadASG"
